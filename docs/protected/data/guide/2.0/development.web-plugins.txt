~~~
[php]
class DemoPlugin extends SBPlugin
{
	/**
	 * @var boolean whether the plugin can be disabled.
	 * You may set this to false when the plugin does not provide any web functionality,
	 * for example if it simply provides a page to configure a game plugins' settings.
	 * This property will be ignored if the plugin does not have an installation procedure.
	 * @see canDisable()
	 */
	public $allowDisable = true;
	
	
	/**
	 * Returns the name of this SourceBans plugin
	 * 
	 * @return string the name of this SourceBans plugin
	 */
	public function getName()
	{
		return 'your_plugin_name';
	}
	
	/**
	 * Returns the description of this SourceBans plugin
	 * 
	 * @return string the description of this SourceBans plugin
	 */
	public function getDescription()
	{
		return 'your_plugin_description';
	}
	
	/**
	 * Returns the author of this SourceBans plugin
	 * 
	 * @return string the author of this SourceBans plugin
	 */
	public function getAuthor()
	{
		return 'your_name';
	}
	
	/**
	 * Returns the version of this SourceBans plugin
	 * 
	 * @return string the version of this SourceBans plugin
	 */
	public function getVersion()
	{
		return '1.0';
	}
	
	/**
	 * Returns the URL of this SourceBans plugin
	 * 
	 * @return string the URL of this SourceBans plugin
	 */
	public function getUrl()
	{
		return 'your_url';
	}
	
	/**
	 * This method is invoked when installing the plugin.
	 * 
	 * @return boolean Whether the installation was successful
	 */
	public function runInstall()
	{
		$transaction = Yii::app()->db->beginTransaction();
		
		try
		{
			Yii::app()->db->createCommand()->createTable('your_table', array(
				'id' => 'pk',
				'name' => 'string',
			), 'ENGINE=InnoDB DEFAULT CHARSET=utf8');
			
			$transaction->commit();
			return true;
		}
		catch(Exception $e)
		{
			$transaction->rollback();
			return false;
		}
	}
	
	/**
	 * This method is invoked right before the settings action is to be executed (after all possible filters.)
	 * You may override this method to do last-minute preparation for the action.
	 */
	public function runSettings()
	{
		Yii::import($this->getPathAlias('models.*'));
		
		$assetsUrl = Yii::app()->assetManager->publish($this->getPath('assets'));
		Yii::app()->clientScript->registerCssFile($assetsUrl . '/css/your_style.css');
		Yii::app()->clientScript->registerScriptFile($assetsUrl . '/js/your_script.js');
		
		$admins = SBAdmin::model()->findAll(array('order' => 'name'));
		
		return array(
			'admins' => $admins,
		);
	}
	
	/**
	 * This method is invoked when uninstalling the plugin.
	 * 
	 * @return boolean Whether the uninstallation was successful
	 */
	public function runUninstall()
	{
		$transaction = Yii::app()->db->beginTransaction();
		
		try
		{
			Yii::app()->db->createCommand()->dropTable('your_table');
			
			$transaction->commit();
			return true;
		}
		catch(Exception $e)
		{
			$transaction->rollback();
			return false;
		}
	}
}
~~~